// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ContributionState {
  pending
  completed
  cancelled

  @@map("contribution_state")
}

enum SubscriptionState {
  pending
  active
  cancelled

  @@map("subscription_state")
}

enum ContributionOrigin {
  online
  manual
  old_site

  @@map("contribution_origin")
}

model ContributionSubscription {
  id            Int               @id @default(autoincrement())
  state         SubscriptionState
  amountInCents Int               @map("amount_in_cents")
  email         String
  contributions Contribution[]
  externalId    String?           @map("external_id")
  experimentId  String?           @map("experiment_id")
  birthday      DateTime?

  User   User? @relation(fields: [userId], references: [id])
  userId Int?

  @@map("contribution_subscriptions")
}

model Contribution {
  id             Int                       @id @default(autoincrement())
  state          ContributionState
  amountInCents  Int                       @map("amount_in_cents")
  email          String
  subscriptionId Int?                      @map("subscription_id")
  subscription   ContributionSubscription? @relation(fields: [subscriptionId], references: [id])
  externalId     String?                   @map("external_id")
  createdAt      DateTime                  @default(now())
  experimentId   String?                   @map("experiment_id")
  origin         ContributionOrigin        @default(online)
  birthday       DateTime?

  User   User? @relation(fields: [userId], references: [id])
  userId Int?

  @@map("contributions")
}

model User {
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())

  email                String                     @unique
  firstName            String                     @map("first_name")
  lastName             String                     @map("last_name")
  university           String
  degree               String
  admissionYear        Int                        @map("admission_year")
  tutorshipInterest    Boolean?                   @map("tutorship_interest")
  mentorshipInterest   Boolean?                   @map("mentorship_interest")
  volunteeringInterest Boolean?                   @map("volunteering_interest")
  contributions        Contribution[]
  subscriptions        ContributionSubscription[]
  birthday             DateTime?

  url String?

  @@map("users")
}
